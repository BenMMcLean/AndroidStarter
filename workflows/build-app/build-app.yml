name: Build

on:
  push:
    branches: [ "main", "develop", "release/**" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: write

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}
      versionCode: ${{ steps.run_number.outputs.versionCode }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.6
        with:
          versionSpec: '5.x'
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.6
        with:
          useConfigFile: true
          configFilePath: ./gitversion.yml
      - name: Display SemVer
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
      - name: run number with offset
        id: run_number
        env:
          NUM: ${{ github.run_number }}
        run: |
          current_run_number=${{ github.run_number }}
          new_number=$((current_run_number+0))
          echo "versionCode=${new_number}" >> $GITHUB_OUTPUT
      - run: echo ${{steps.run_number.outputs.versionCode}}
  build-debug:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: -PappVersionName=${{ needs.version.outputs.version }} -PappVersionCode=${{ needs.version.outputs.versionCode }} build
      - name: Rename APK
        run: mv ./app/build/outputs/apk/debug/app-debug.apk ./app/build/outputs/apk/debug/app-debug-${{ needs.version.outputs.version }}.apk
      - uses: actions/upload-artifact@master
        with:
          name: ${{github.run_number}}-debug-apk
          path: ./app/build/outputs/apk/debug/app-debug-${{ needs.version.outputs.version }}.apk
  build-ab:
    needs: version
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release') }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: -PappVersionName=${{ needs.version.outputs.version }} -PappVersionCode=${{ needs.version.outputs.versionCode }} app:bundleRelease
      - uses: ilharp/sign-android-release@v1 # Or use @nightly
        name: Sign app APK
        id: sign_app
        with:
          releaseDir: ./app/build/outputs/bundle/release/
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          buildToolsVersion: 33.0.0
      - name: Rename AAB
        run: mv ${{steps.sign_app.outputs.signedFile}} ./app-release-${{ needs.version.outputs.version }}.aab
      - uses: actions/upload-artifact@master
        with:
          name: ${{github.run_number}}-release-appbundle
          path: ./app-release-${{ needs.version.outputs.version }}.aab
  publish-pre:
    needs:
      - build-debug
      - version
    if: ${{ github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: ${{github.run_number}}-debug-apk
          path: ./app/build/outputs/apk/debug/
      - uses: actions/download-artifact@master
        if: ${{ startsWith(github.ref, 'refs/heads/release') }}
        with:
          name: ${{github.run_number}}-release-appbundle
          path: ./
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: true
          tag_name: pre/v${{ needs.version.outputs.version }}
          release_name: Prerelease ${{ needs.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload APK artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/debug/app-debug-${{ needs.version.outputs.version }}.apk
          asset_name: app-debug-${{ needs.version.outputs.version }}.apk
          asset_content_type: application/java-archive
      - name: Upload AAB artifact
        uses: actions/upload-release-asset@v1
        if: ${{ startsWith(github.ref, 'refs/heads/release') }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-release-${{ needs.version.outputs.version }}.aab
          asset_name: app-release-${{ needs.version.outputs.version }}.aab
          asset_content_type: application/java-archive
  publish-release:
    needs:
      - build-debug
      - build-ab
      - version
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: ${{github.run_number}}-debug-apk
          path: ./app/build/outputs/apk/debug/
      - uses: actions/download-artifact@master
        with:
          name: ${{github.run_number}}-release-appbundle
          path: ./
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          tag_name: v${{ needs.version.outputs.version }}
          release_name: Release ${{ needs.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload APK artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app/build/outputs/apk/debug/app-debug-${{ needs.version.outputs.version }}.apk
          asset_name: app-debug-${{ needs.version.outputs.version }}.apk
          asset_content_type: application/java-archive
      - name: Upload AAB artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-release-${{ needs.version.outputs.version }}.aab
          asset_name: app-release-${{ needs.version.outputs.version }}.aab
          asset_content_type: application/java-archive